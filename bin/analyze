#!/usr/bin/env python
"""Make engine analysis for PGN games"""
from dinora.utils import disable_tensorflow_log

disable_tensorflow_log()

import logging
import argparse

from dinora import search
from dinora.net import ChessModel
from dinora.preprocess_pgn import load_chess_games


def main():
    parser = argparse.ArgumentParser(description="Make engine analysis for PGN games")
    parser.add_argument("pgn_path")
    parser.add_argument("max_games", type=int)

    args = parser.parse_args()

    games = load_chess_games(args.pgn_path, args.max_games)
    network = ChessModel("models/latest.h5")

    for game in games:
        board = game.board()

        for i, move in enumerate(game.mainline_moves()):
            bestmove, score = search.uct_nodes(
                board, 50, network, 2.0, None, 0.3, 0.0, 1.6
            )
            print(f"{i}: {bestmove} - {score}")

            try:
                board.push(move)
            except AssertionError:
                logging.warning(
                    "Broken game found," f"can't make a move {move}." "Skipping"
                )


if __name__ == "__main__":
    main()
